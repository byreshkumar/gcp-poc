name: CD Pipeline to Google Cloud Run (staging and production)
on:
  push:
    branches:
      - staging
  workflow_dispatch: {}
  release:
    types: published

env:
  PORT: 5001
  IMAGE: ${{vars.IMAGE}}:${{github.sha}}
  APP: app
jobs:
  test:
    runs-on: ubuntu-latest
    name: Setup, test, and build project
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install dependencies
        run: npm ci

      - name: Test application
        run: npm test
  build:
    needs: test
    runs-on: ubuntu-latest
    name: Setup project, Authorize GitHub Actions to GCP and Docker Hub, and deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Authenticate for GCP
        id: gcp-auth
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Authenticate for Docker Hub
        id: docker-auth
        env:
          D_USER: ${{secrets.DOCKER_USER}}
          D_PASS: ${{secrets.DOCKER_PASSWORD}}
        run: |
          docker login -u $D_USER -p $D_PASS

      - name: Build and tag Image
        run: |
          docker build -t ${{env.IMAGE}} .

      # - name: Push the image to Docker hub
        # run: |
          # docker push ${{env.IMAGE}}
       
      - name: Authenticate to GCR for docker
        run: |
          gcloud auth configure-docker ${{vars.GCR_REGION}}-docker.pkg.dev
          
      - name: Build and tag Image with GCR Repo details
        run: |
          #docker build -t ${{env.IMAGE}} .
          docker tag ${{env.IMAGE}} ${{vars.GCR_REGION}}-docker.pkg.dev/${{secrets.GCP_PROJECT_ID}}/${{vars.GCR_REPO}}/testapp:${{github.sha}}
          
      - name: Push the image to GCR
        run: |
          docker push ${{vars.GCR_REGION}}-docker.pkg.dev/${{secrets.GCP_PROJECT_ID}}/${{vars.GCR_REPO}}/testapp:${{github.sha}}
          
      # - name: create a gke cluster
        # run: |
          # gcloud container clusters create-auto app-cluster --region ${{vars.GCR_REGION}}
      
      - name: install gke-gcloud-auth-plugin to use kubectl
        run: |
          gcloud components install gke-gcloud-auth-plugin
      
      - name: update kubectl configuration to use plugin and connect to gke cluster
        run: |
          gcloud container clusters get-credentials app-cluster --region ${{vars.GCR_REGION}}
      
      - name: assign role to artifact repo to use by gke
        run: |
          gcloud artifacts repositories add-iam-policy-binding my-repo --location=us-central1 --member='serviceAccount:gcp-poc-new-sa@watchful-hall-447106-r1.iam.gserviceaccount.com' --role='roles/artifactregistry.reader'
     